/*
 * Copyright 2016 by the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
  id 'java'
  id 'com.github.johnrengelman.shadow' version '1.2.3'
}

group 'com.basho.riak'
version '0.1.0-SNAPSHOT'

ext {
  gradleVersion = '2.12'

  junitVersion = '4.12'
  dockerClientVersion = '3.5.12'
  rxJavaVersion = '1.1.3'
  gsCollectionsVersion = '7.0.3'

  mockitoVersion = '1.10.19'
  riakClientVersion = '1.5.0'
}
apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
  jcenter()
  maven {
    url "http://dl.bintray.com/basho/data-platform"
  }
}

dependencies {
  compile "junit:junit:$junitVersion",
      "com.spotify:docker-client:$dockerClientVersion",
      "io.reactivex:rxjava:$rxJavaVersion",
      "com.goldmansachs:gs-collections:$gsCollectionsVersion"

  testCompile "org.hamcrest:hamcrest-library:1.3",
      "org.mockito:mockito-all:$mockitoVersion",
      "com.basho.riak:dataplatform-riak-client:$riakClientVersion"
  testRuntime "ch.qos.logback:logback-classic:1.1.7"
}

task wrapper(type: Wrapper) {
  gradleVersion = "$gradleVersion"
}


shadowJar {
  classifier = ''
  dependencies {
    include(dependency('com.google.guava:guava'))
    include(dependency('javax.ws.rs:javax.ws.rs-api'))
    include(dependency('com.fasterxml.jackson.core:jackson-core'))
    include(dependency('com.fasterxml.jackson.core:jackson-databind'))
    include(dependency('com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider'))
    include(dependency('com.fasterxml.jackson.jaxrs:jackson-jaxrs-base'))
    include(dependency('com.fasterxml.jackson.datatype:jackson-datatype-guava'))
    include(dependency('com.fasterxml.jackson.core:jackson-annotations'))
    include(dependency('org.glassfish.jersey.core:jersey-client'))
    include(dependency('org.glassfish.jersey.core:jersey-common'))
    include(dependency('org.glassfish.jersey.media:jersey-media-json-jackson'))
    include(dependency('org.glassfish.jersey.connectors:jersey-apache-connector'))
    include(dependency('org.glassfish.jersey.ext:jersey-entity-filtering'))
    include(dependency('com.spotify:docker-client'))
  }
  relocate 'com.google', 'shaded.com.google'
  relocate 'javax.ws.rs', 'shaded.javax.ws.rs'
  relocate 'com.fasterxml.jackson', 'shaded.com.fasterxml.jackson'
  relocate 'org.glassfish.jersey', 'shaded.org.glassfish.jersey'
}